rownames(data.House.Waste) <- data.House.Waste[,1]
data.House.Waste <- as.data.frame.numeric(data.House.Waste)
view(data.House.Waste)
data.House.Waste <- new_base_dados_house[,-c(1,2,6)]
data.House.Waste <- as.data.frame.numeric(data.House.Waste)
load('houseWaste.RData')
data.House.Waste <- new_base_dados_house[,-c(1,2,6)]
data.House.Waste <- as.data.frame(data.House.Waste)
rownames(data.House.Waste) <- data.House.Waste[,1]
data.House.Waste <- na.omit(data.House.Waste)
data.House.Waste<-data.House.Waste[!(data.House.Waste$`Household estimate (kg/capita/year)`=="*"),]
rownames(data.House.Waste) <- data.House.Waste[,1]
view(data.House.Waste)
data.House.Waste <- data.House.Waste[,-1]
save(data.House.Waste, file = 'data.House.Waste')
class(data.House.Waste)
view(gdp_Capta)
data.PIB.capta <- rename(gdp_Capta, 'Pib per capta' = Value )
view(data.PIB.capta)
view(base_education)
save(data.House.Waste, file = 'data.House.Waste.RData')
save(data.PIB.capta, file = 'data.PIB.capta.RData')
data.ESCOLARIDADE <- base_education
class(data.PIB.capta)
save(data.ESCOLARIDADE, file = 'data.ESCOLARIDADE.RData')
class(data.ESCOLARIDADE)
view(data.House.Waste)
dadosJuntos <- merge(data.House.Waste,data.PIB.capta, by = 0 )#juntando pelo critério de rownames
view(dadosJuntos)
rownames(dadosJuntos) <- dadosJuntos[,1]
dadosJuntos <- merge(dadosJuntos,data.ESCOLARIDADE, by = 0)
dadosJuntos <- dadosJuntos[,-1]
dadosJuntos <- merge(dadosJuntos,data.ESCOLARIDADE, by = 0)
view(dadosJuntos)
load('houseWaste.RData')
load('gdpCapta.RData')
load('base_education.RData')
#Ajustando data house waste
data.House.Waste <- new_base_dados_house[,-c(1,2,6)]
data.House.Waste <- as.data.frame(data.House.Waste)
data.House.Waste <- na.omit(data.House.Waste)
data.House.Waste<-data.House.Waste[!(data.House.Waste$`Household estimate (kg/capita/year)`=="*"),]
rownames(data.House.Waste) <- data.House.Waste[,1]
data.House.Waste <- data.House.Waste[,-1]
save(data.House.Waste, file = 'data.House.Waste.RData')
data.PIB.capta <- rename(gdp_Capta, 'Pib per capta' = Value )
save(data.PIB.capta, file = 'data.PIB.capta.RData')
data.ESCOLARIDADE <- base_education
save(data.ESCOLARIDADE, file = 'data.ESCOLARIDADE.RData')
dadosJuntos <- merge(data.House.Waste,data.PIB.capta, by = 0 )#juntando pelo critério de rownames
rownames(dadosJuntos) <- dadosJuntos[,1]
class(dadosJuntos)
view(dadosJuntos)
dadosJuntos <- dadosJuntos[,-1]
view(dadosJuntos)
view(data.ESCOLARIDADE)
class(data.ESCOLARIDADE)
teste <- merge(dadosJuntos,data.ESCOLARIDADE, by = 0)
dadosJuntos<- merge(dadosJuntos,data.ESCOLARIDADE, by = 0)
save(dadosJuntos, file = 'dadosJuntos')
dataCluster1 <- dadosJuntos
view(dataCluster1)
rownames(dataCluster1) <- dataCluster1[,1]
view(dataCluster1)
dataCluster1 <- dataCluster1[,-c(1,3,4,7)] %>% rename(dataCluster1, escolaridade = average)
dataCluster1 <- dataCluster1[,-c(1,3,4,7)]
dataCluster1 <- rename(dataCluster1, 'escolaridade anos' = average )
view(dataCluster1)
save(dataCluster1, file = 'dataCluster1.RData')
teste <- scale(dataCluster1)
teste <- as.numeric(dataCluster1)
names(dataCluster1)
str(dataCluster1)
teste <- transform(dataCluster1,
dataCluster1$`Household estimate (kg/capita/year)`= as.numeric(dataCluster1$`Household estimate (kg/capita/year)`,)
dataCluster1$`escolaridade anos` = as.numeric(dataCluster1$`escolaridade anos`))
teste <- transform(dataCluster1, 'Household estimate (kg/capita/year)'= as.numeric(Household estimate (kg/capita/year)),
'escolaridade anos'= as.numeric(escolaridade anos))
teste <- transform(dataCluster1, 'Household estimate (kg/capita/year)'= as.numeric('Household estimate (kg/capita/year')),
'escolaridade anos'= as.numeric('escolaridade anos'))
teste <- transform(dataCluster1, Household estimate (kg/capita/year)= as.numeric(Household estimate (kg/capita/year))
teste <- transform(dataCluster1, 'Household estimate (kg/capita/year)'= as.numeric('Household estimate (kg/capita/year'))
view(teste)
view(dataCluster1)
teste <- #precisa transformar em numeric!!!!!!!!
teste <- as.numeric(dataCluster1$`Household estimate (kg/capita/year)`)                                                                                 '
str(teste)
view(teste)
View(teste)
View(teste)
view(dataCluster1)
View(teste)
teste <- #precisa transformar em numeric!!!!!!!!
teste <- as.numeric(dataCluster1$`Household estimate (kg/capita/year)`)                                                                                 '
load('dataCluster1.RData')
load('dataCluster1.RData')
teste <- as.numeric(dataCluster1$`Household estimate (kg/capita/year)`)
teste[] <- lapply(dataCluster1, function(x) as.numeric(as.character(x)))
View(teste)
teste[,c(1,2,3)] <- lapply(dataCluster1, function(x) as.numeric(as.character(x)))
teste[,c(1,3)] <- lapply(dataCluster1, function(x) as.numeric(as.character(x)))
head(dataCluster1)
teste <- transform(dataCluster1,Household estimate (kg/capita/year)= as.numeric(Household estimate (kg/capita/year)) )
teste <- transform(dataCluster1,'Household estimate (kg/capita/year)'= as.numeric('Household estimate (kg/capita/year)') )
View(teste)
teste <- transform(dataCluster1,'Household estimate (kg/capita/year)'= as.numeric(as.factor('Household estimate (kg/capita/year)') )
end
teste <- transform(dataCluster1,'Household estimate (kg/capita/year)'= as.numeric(factor('Household estimate (kg/capita/year)') )
end()
teste <- transform(dataCluster1, factor('Household estimate (kg/capita/year)')
end()
View(dataCluster1)
head(dataCluster1)
dataCluster1 <- rename(dataCluster1, waste = 'Household estimate (kg/capita/year)',
PIBcapta = 'Pib per capta',
Escolaridade = 'escolaridade anos')
library(dplyr)
dataCluster1 <- rename(dataCluster1, waste = 'Household estimate (kg/capita/year)',
PIBcapta = 'Pib per capta',
Escolaridade = 'escolaridade anos')
names(dataCluster1)
dataCluster1 <- dataCluster1( waste = factor(1)
PIBcapta = numeric(2)
Escolaridade = factor(3))
dataCluster1 <- dataCluster1( waste = factor()
PIBcapta = numeric()
Escolaridade = factor())
teste <- transform(   waste = factor(waste)
PIBcapta = numeric(PIBcapta)
Escolaridade = factor(Escolaridade))
names(dataCluster1)
teste <- transform(dataCluster1, waste = as.factor(waste),PIBcapta = as.factor(PIBcapta),
Escolaridade = as.factor(Escolaridade)
)
class(teste)
str(teste)
View(teste)
teste <- as.numeric(teste)
teste <- transform(teste, waste = as.numeric(waste),
PIBcapta = as.numeric(PIBcapta),
Escolaridade = as.numeric(Escolaridade)
)
str(teste)
teste <- scale(teste)
View(teste)
dataCluster1 <- transform(dataCluster1, waste = as.factor(waste),PIBcapta = as.factor(PIBcapta),
Escolaridade = as.factor(Escolaridade)
)
dataCluster1 <- transform(teste, waste = as.numeric(waste),
PIBcapta = as.numeric(PIBcapta),
Escolaridade = as.numeric(Escolaridade)
)
dataCluster1 <- scale(dataCluster1)
#testeando algumas opções
dataCluster1.k3 <- kmeans(dataCluster1, centers = 3)
dataCluster1.k3 <- kmeans(dataCluster1, centers = 4)
dataCluster1.k3 <- kmeans(dataCluster1, centers = 5)
dataCluster1.k3 <- kmeans(dataCluster1, centers = 6)
#Graficos
G1 <- fviz_cluster(dataCluster1.k3, geom = "point", data = dataCluster1) + ggtitle("k = 3")
library(cluster)#cluster
library(factoextra) #cluster
library(fpc) #algoritmo de cluster e visualizacao
library(gridExtra) #para a funcao grid arrange
#testeando algumas opções
dataCluster1.k3 <- kmeans(dataCluster1, centers = 3)
dataCluster1.k3 <- kmeans(dataCluster1, centers = 4)
dataCluster1.k3 <- kmeans(dataCluster1, centers = 5)
dataCluster1.k3 <- kmeans(dataCluster1, centers = 6)
#Graficos
G1 <- fviz_cluster(dataCluster1.k3, geom = "point", data = dataCluster1) + ggtitle("k = 3")
G2 <- fviz_cluster(dataCluster1.k4, geom = "point", data = dataCluster1) + ggtitle("k = 4")
G3 <- fviz_cluster(dataCluster1.k5, geom = "point", data = dataCluster1) + ggtitle("k = 5")
#testeando algumas opções
dataCluster1.k3 <- kmeans(dataCluster1, centers = 3)
dataCluster1.k4 <- kmeans(dataCluster1, centers = 4)
dataCluster1.k5 <- kmeans(dataCluster1, centers = 5)
dataCluster1.k6 <- kmeans(dataCluster1, centers = 6)
#Graficos
G1 <- fviz_cluster(dataCluster1.k3, geom = "point", data = dataCluster1) + ggtitle("k = 3")
G2 <- fviz_cluster(dataCluster1.k4, geom = "point", data = dataCluster1) + ggtitle("k = 4")
G3 <- fviz_cluster(dataCluster1.k5, geom = "point", data = dataCluster1) + ggtitle("k = 5")
G4 <- fviz_cluster(dataCluster1.k6, geom = "point", data = dataCluster1) + ggtitle("k = 6")
#Criar uma matriz com 4 graficos
grid.arrange(G1, G2, G3, G4, nrow = 2)
#VERIFICANDO ELBOW
fviz_nbclust(dataCluster1, FUN = hcut, method = "wss")
fviz_nbclust(dataCluster1, FUN = hcut, method = "silhouette")
fviz_nbclust(dataCluster1, FUN = hcut, method = "gap_stat")
dataCluster1.k7 <- kmeans(dataCluster1, centers = 7)
G7 <- fviz_cluster(dataCluster1.k7, geom = "point", data = dataCluster1) + ggtitle("k = 7")
grid.arrange(G7, nrow = 1)
dataCluster1.k7 <- kmeans(dataCluster1, centers = 2)
G7 <- fviz_cluster(dataCluster1.k7, geom = "point", data = dataCluster1) + ggtitle("k = 2")
grid.arrange(G7, nrow = 1)
load('dataCluster1.RData')
summary(dataCluster1)
View(summary(dataCluster1))
load('dataCluster1.RData')
dataCluster1 <- rename(dataCluster1, waste = 'Household estimate (kg/capita/year)',
PIBcapta = 'Pib per capta',
Escolaridade = 'escolaridade anos')
library(dplyr)
dataCluster1 <- rename(dataCluster1, waste = 'Household estimate (kg/capita/year)',
PIBcapta = 'Pib per capta',
Escolaridade = 'escolaridade anos')
dataCluster1 <- transform(dataCluster1, waste = as.factor(waste),PIBcapta = as.factor(PIBcapta),
Escolaridade = as.factor(Escolaridade)
)
dataCluster1 <- transform(teste, waste = as.numeric(waste),
PIBcapta = as.numeric(PIBcapta),
Escolaridade = as.numeric(Escolaridade))
dataCluster1 <- transform(dataCluster1, waste = as.numeric(waste),
PIBcapta = as.numeric(PIBcapta),
Escolaridade = as.numeric(Escolaridade))
library(cluster)#cluster
library(factoextra) #cluster
library(fpc) #algoritmo de cluster e visualizacao
library(gridExtra) #para a funcao grid arrange
load('dataCluster1.RData')
dataCluster1 <- rename(dataCluster1, waste = 'Household estimate (kg/capita/year)',
PIBcapta = 'Pib per capta',
Escolaridade = 'escolaridade anos')
dataCluster1 <- transform(dataCluster1, waste = as.factor(waste),PIBcapta = as.factor(PIBcapta),
Escolaridade = as.factor(Escolaridade)
)
dataCluster1 <- transform(dataCluster1, waste = as.numeric(waste),
PIBcapta = as.numeric(PIBcapta),
Escolaridade = as.numeric(Escolaridade)
)
dataCluster1 <- scale(dataCluster1)# padronizando
#testeando algumas opções
dataCluster1.k3 <- kmeans(dataCluster1, centers = 3)
dataCluster1.k4 <- kmeans(dataCluster1, centers = 4)
dataCluster1.k5 <- kmeans(dataCluster1, centers = 5)
dataCluster1.k6 <- kmeans(dataCluster1, centers = 6)
#Graficos
G1 <- fviz_cluster(dataCluster1.k3, geom = "point", data = dataCluster1) + ggtitle("k = 3")
G2 <- fviz_cluster(dataCluster1.k4, geom = "point", data = dataCluster1) + ggtitle("k = 4")
G3 <- fviz_cluster(dataCluster1.k5, geom = "point", data = dataCluster1) + ggtitle("k = 5")
G4 <- fviz_cluster(dataCluster1.k6, geom = "point", data = dataCluster1) + ggtitle("k = 6")
#Criar uma matriz com 4 graficos
grid.arrange(G1, G2, G3, G4, nrow = 2)
load('dataCluster1.RData')
dataCluster1 <- rename(dataCluster1, waste = 'Household estimate (kg/capita/year)',
PIBcapta = 'Pib per capta',
Escolaridade = 'escolaridade anos')
dataCluster1 <- transform(dataCluster1, waste = as.factor(waste),PIBcapta = as.factor(PIBcapta),
Escolaridade = as.factor(Escolaridade)
)
dataCluster1 <- transform(dataCluster1, waste = as.numeric(waste),
PIBcapta = as.numeric(PIBcapta),
Escolaridade = as.numeric(Escolaridade))
save(dataCluster1, file =  'data.Resumo.RData')
load(data.Reumo.RData)
load('data.Reumo.RData')
load(data.Resumo.RData)
load('data.Resumo.RData')
data.Resumo <- dataCluster1
save(dataCluster1, file =  'data.Resumo.RData')
load('data.Resumo.RData')
load('dataCluster1.RData')
dataCluster1 <- rename(dataCluster1, waste = 'Household estimate (kg/capita/year)',
PIBcapta = 'Pib per capta',
Escolaridade = 'escolaridade anos')
dataCluster1 <- transform(dataCluster1, waste = as.factor(waste),PIBcapta = as.factor(PIBcapta),
Escolaridade = as.factor(Escolaridade)
)
dataCluster1 <- transform(dataCluster1, waste = as.numeric(waste),
PIBcapta = as.numeric(PIBcapta),
Escolaridade = as.numeric(Escolaridade))
data.Resumo <- dataCluster1
save(dataCluster1, file =  'data.Resumo.RData')
load('data.Resumo.RData')
save(data.Resumo, file =  'data.Resumo.RData')
load('dataCluster1.RData')
dataCluster1 <- rename(dataCluster1, waste = 'Household estimate (kg/capita/year)',
PIBcapta = 'Pib per capta',
Escolaridade = 'escolaridade anos')
dataCluster1 <- transform(dataCluster1, waste = as.factor(waste),PIBcapta = as.factor(PIBcapta),
Escolaridade = as.factor(Escolaridade)
)
dataCluster1 <- transform(dataCluster1, waste = as.numeric(waste),
PIBcapta = as.numeric(PIBcapta),
Escolaridade = as.numeric(Escolaridade))
data.Resumo <- dataCluster1
save(data.Resumo, file =  'data.Resumo.RData')
load('data.Resumo.RData')
View(data.Resumo)
data.Resumo <- rename(data.Resumo, 'Despedício (kg per capta)' = waste,
'Pib per capta'= PIBcapta,
'Escolaridade (anos)' = Escolaridade )
View(data.Resumo)
data.Resumo <- rename(data.Resumo, 'Despedício (kg per capta)' = waste,
'Pib (per capta)'= PIBcapta,
'Escolaridade (anos)' = Escolaridade )
View(summarise(data.Resumo))
View(summary(data.Resumo))
View(data.Resumo)
load('dataCluster1.RData')
View(dataCluster1)
dataCluster1 <- rename(dataCluster1, waste = 'Household estimate (kg/capita/year)',
PIBcapta = 'Pib per capta',
Escolaridade = 'escolaridade anos')
dataCluster1 <- transform(dataCluster1, waste = as.factor(waste),PIBcapta = as.factor(PIBcapta),
Escolaridade = as.factor(Escolaridade)
)
dataCluster1 <- transform(dataCluster1, waste = as.numeric(waste),
PIBcapta = as.numeric(PIBcapta),
Escolaridade = as.numeric(Escolaridade)
)
View(dataCluster1)
load('dataCluster1.RData')
dataCluster1 <- rename(dataCluster1, waste = 'Household estimate (kg/capita/year)',
PIBcapta = 'Pib per capta',
Escolaridade = 'escolaridade anos')
class(dataCluster1)
str(dataCluster1)
View(dataCluster1)
teste <- transform(dataCluster1, waste = as.factor(waste),PIBcapta = as.factor(PIBcapta),
Escolaridade = as.factor(Escolaridade)
)
View(teste)
teste2 <- transform(teste, waste = as.numeric(waste),
PIBcapta = as.numeric(PIBcapta),
Escolaridade = as.numeric(Escolaridade)
)
View(teste2)
teste2 <- transform(teste, waste = as.double(waste),
PIBcapta = as.double(PIBcapta),
Escolaridade = as.double(Escolaridade)
)
View(teste2)
teste2 <- as.numeric(teste)
teste2 <- as.numeric(teste)
teste2 <- lapply(teste, as.numeric)
View(teste2)
teste3 <- as.data.frame(teste2)
View(teste3)
teste4 <- as_tibble(teste)
View(teste4)
str(teste4)
teste5 <- as.numeric(teste4)
teste5 <- transform(teste4, waste = as.double(waste),
teste5 <- transform(teste4, waste = as.double(waste),
PIBcapta = as.double(PIBcapta),
Escolaridade = as.double(Escolaridade))
end()
teste5 <- transform(teste4, waste = as.double(waste),
PIBcapta = as.double(PIBcapta),
Escolaridade = as.double(Escolaridade))
View(teste5)
teste6 <- as.numeric(unlist(teste))
View(teste6)
View(as.data.frame(teste6))
waste <- as.numeric(unlist(teste$waste))
pib <- as.numeric(unlist(teste$PIBcapta))
escola <- as.numeric(unlist(teste$Escolaridade))
View(escola)
save(dataCluster1, file = 'resumoexcel.xls')
load('dataCluster1.RData')
dataCluster1 <- rename(dataCluster1, waste = 'Household estimate (kg/capita/year)',
PIBcapta = 'Pib per capta',
Escolaridade = 'escolaridade anos')
dataCluster1 <- transform(dataCluster1, waste = as.numeric(waste),
PIBcapta = as.numeric(PIBcapta),
Escolaridade = as.numeric(Escolaridade)
)
str(dataCluster1)
View(dataCluster1)
dataCluster1 <- scale(dataCluster1)# padronizando
#testeando algumas opções
dataCluster1.k3 <- kmeans(dataCluster1, centers = 3)
dataCluster1.k4 <- kmeans(dataCluster1, centers = 4)
dataCluster1.k5 <- kmeans(dataCluster1, centers = 5)
dataCluster1.k6 <- kmeans(dataCluster1, centers = 6)
#Graficos
G1 <- fviz_cluster(dataCluster1.k3, geom = "point", data = dataCluster1) + ggtitle("k = 3")
G2 <- fviz_cluster(dataCluster1.k4, geom = "point", data = dataCluster1) + ggtitle("k = 4")
G3 <- fviz_cluster(dataCluster1.k5, geom = "point", data = dataCluster1) + ggtitle("k = 5")
G4 <- fviz_cluster(dataCluster1.k6, geom = "point", data = dataCluster1) + ggtitle("k = 6")
#Criar uma matriz com 4 graficos
grid.arrange(G1, G2, G3, G4, nrow = 2)
load('dataCluster1.RData')
load('dataCluster1.RData')
dataCluster1 <- rename(dataCluster1, waste = 'Household estimate (kg/capita/year)',
PIBcapta = 'Pib per capta',
Escolaridade = 'escolaridade anos')
dataCluster1 <- transform(dataCluster1, waste = as.numeric(waste),
PIBcapta = as.numeric(PIBcapta),
Escolaridade = as.numeric(Escolaridade))
data.Resumo <- dataCluster1
save(data.Resumo, file =  'data.Resumo.RData')
load('data.Resumo.RData')
data.Resumo <- rename(data.Resumo, 'Despedício (kg per capta)' = waste,
'Pib per capta'= PIBcapta,
'Escolaridade (anos)' = Escolaridade )
View(summary(data.Resumo))
?kmeans
?fviz_cluster
set.seed(123)
# Data preparation
# +++++++++++++++
data("iris")
head(iris)
# Remove species column (5) and scale the data
iris.scaled <- scale(iris[, -5])
# K-means clustering
# +++++++++++++++++++++
km.res <- kmeans(iris.scaled, 3, nstart = 10)
# Visualize kmeans clustering
# use repel = TRUE to avoid overplotting
fviz_cluster(km.res, iris[, -5], ellipse.type = "norm")
# Change the color palette and theme
fviz_cluster(km.res, iris[, -5],
palette = "Set2", ggtheme = theme_minimal())
## Not run:
# Show points only
fviz_cluster(km.res, iris[, -5], geom = "point")
# Show text only
fviz_cluster(km.res, iris[, -5], geom = "text")
# PAM clustering
# ++++++++++++++++++++
require(cluster)
pam.res <- pam(iris.scaled, 3)
# Visualize pam clustering
fviz_cluster(pam.res, geom = "point", ellipse.type = "norm")
# Hierarchical clustering
# ++++++++++++++++++++++++
# Use hcut() which compute hclust and cut the tree
hc.cut <- hcut(iris.scaled, k = 3, hc_method = "complete")
# Visualize dendrogram
fviz_dend(hc.cut, show_labels = FALSE, rect = TRUE)
# Visualize cluster
fviz_cluster(hc.cut, ellipse.type = "convex")
install.packages("reshape2")
library(reshape2)
data.long <- View(summary(data.Resumo))
data.long
View(data.long)
data.long <- summary(data.Resumo)
View(data.long)
library(tidyr)
head(data.long)
data.wide <- spread(data.long, 'Despedício (kg per capta)', 'Pib per capta', 'Escolaridade (anos)')
class(data.long)
data.long <- as.data.frame(data.long)
data.wide <- spread(data.long, 'Despedício (kg per capta)', 'Pib per capta', 'Escolaridade (anos)')
View(head(data))
View(head(data.long))
data.long <- summary(data.Resumo)
View(data.long)
data.long <- as.data.frame(data.long)
View(data.long)
Despedício (kg per capta)
data.wide <- spread(data.long, Despedício (kg per capta), Pib per capta, Escolaridade (anos))
data.wide <- spread(data.long, 'Despedício (kg per capta)'
, 'Pib per capta', 'Escolaridade (anos)'
)
names(data.long)
data.wide <- spread(data.long, "Var2" "Freq"
)
data.wide <- spread(data.long, "Var2", "Freq"
)
data.wide <- spread(data.long, Var2, Freq)
data.long <- summary(data.Resumo)
data.wide <- spread(data.long, Var2, Freq)
data.long <- as.data.frame(data.long)
data.wide <- spread(data.long, Var2, Freq)
data.wide2 <- gather(data.long,Var2, Freq)
View(data.wide2)
data.wide <- spread(data.long, Var2, Freq)
data.wide2 <- gather(data.long,Var2)
data.wide <- spread(data.long, Var2)
names(data.long)
data.wide <- spread(data.long, "Var2")
data.wide <- spread(data.long, Var2)
data.wide <- spread(data.long, key=Var2, value = values)
data.wide <- spread(data.long, key=Var2)
?spread
names(data.long)
data.wide3 <-  reshape(data.long,
idvar = "Var2",
timevar = "Freq",
direction = "wide")
View(data.wide3)
data.wide3 <-  reshape(data.long,
idvar = "Var2",
direction = "wide")
names(data.long)
data.wide3 <- reshape(data.long,
idvar = "Var1",
timevar = "Var2",
direction = "wide")
View(data.wide3)
data.wide3 <- reshape(data.long,
idvar = "Despedício (kg per capta)",
timevar = "Pib per capta",
direction = "wide")
data.wide3 <- reshape(data.long,
"Despedício (kg per capta)",
"Pib per capta",
"Escolaridade (anos)",
direction = "wide")
data.wide <- spread(data.long, "Despedício (kg per capta)","Escolaridade (anos)")
data.wide3 <- reshape(data.long,
"Despedício (kg per capta)",
"Pib per capta",
"Escolaridade (anos)",
direction = "wide")
?reshapeWide
?reshape
